)co gsl
gslLookup("gsl_linalg_LU_decomp")
gslLookup("gsl_permute")
--
DF ==> DoubleFloat
--
not gslIsNaN?(0.0::DF)
gslIsNaN?(0.0::DF/0.0::DF)
--
zero? gslIsInf(0.0::DF)
zero? gslIsInf(0.0::DF/0.0::DF)
one? gslIsInf(1.0::DF/0.0::DF)
-- see footnote 6 in gsl manual
one?(-gslIsInf(-1.0::DF/0.0::DF))
--
gslFinite?(0.0::DF)
not gslFinite?(1.0::DF/0.0::DF)
not gslFinite?(0.0::DF/0.0::DF)
--
gslFcmp(3.141592::DF,3.1415::DF,0.00001::DF)
gslFcmp(3.1415::DF,3.141592::DF,0.0001::DF)
gslFcmp(3.1415::DF,3.141592::DF,0.00001::DF)
--
f:=(x:DF):DF+->exp(-x^2)
gslIntegrationQng(f,0.0::DF,1.0::DF)
g(x:DF):DF == exp(-x^2)
gslIntegrationQng(g,0.0::DF,1.0::DF).result
--
m:=matrix [[11.0::DF,2.0::DF,3.0::DF],[4.0::DF,5.0::DF,6.0::DF],[7.0::DF,8.0::DF,9.0::DF]]
m1:=gslLUdecomposition(m)
-- Why is sign wrong? Need sign of permuation.
reduce(*,[(m1.LU)(i,i) for i in 1..3])
determinant(m)
L1:=matrix [[(j<i=>(m1.LU)(i,j);(i=j=>1.0;0.0)) for j in 1..3] for i in 1..3]
U1:=matrix [[(i<=j=>(m1.LU)(i,j);0.0) for j in 1..3] for i in 1..3]
L1*U1
-- Compare
m2:=LUDecomp(m)$LUDecomposition(DF)
reduce(*,[(m2.LU)(i,i) for i in 1..3])
L2:=matrix [[(j<i=>(m2.LU)(i,j);(i=j=>1.0;0.0)) for j in 1..3] for i in 1..3]
U2:=matrix [[(i<=j=>(m2.LU)(i,j);0.0) for j in 1..3] for i in 1..3]
L2*U2
